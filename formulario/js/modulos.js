// M√≥dulos adicionais para o sistema SuperA√ß√£o
// Requer o arquivo components.js carregado antes deste

// M√≥dulo de conte√∫do para integra√ß√µes
const IntegracaoModule = {
    // Renderiza a tab de API
    renderAPI: function() {
        // Status da API
        const apiStatus = Components.statusBadge('Ativo', 'active');
        
        // Chaves de API
        const apiKeys = [
            ['API-KEY-12345', 'Web', '15/06/2024', '120/dia', Components.statusBadge('Ativo', 'active')],
            ['API-KEY-67890', 'Mobile', '10/09/2024', '500/dia', Components.statusBadge('Ativo', 'active')],
            ['API-KEY-ABCDE', 'Parceiro X', '05/03/2024', '50/dia', Components.statusBadge('Inativo', 'inactive')]
        ];
        
        const apiKeyActions = [
            { title: 'Editar', icon: '‚úèÔ∏è' },
            { title: 'Regenerar', icon: 'üîÑ' },
            { title: 'Excluir', icon: '‚ùå', danger: true }
        ];
        
        return `
            <div class="form-row">
                <div style="margin-bottom: 15px;">
                    <h3>Configura√ß√µes de API</h3>
                    <div class="form-help">Configure as chaves de API e permiss√µes para integra√ß√£o com outros sistemas.</div>
                </div>
                
                <div class="form-row">
                    <label class="form-label">Status da API</label>
                    <div style="display: flex; align-items: center; gap: 10px; margin-top: 10px;">
                        <div>${apiStatus}</div>
                        <button class="btn btn-outline btn-sm">Alterar Status</button>
                    </div>
                </div>
                
                <div class="form-row">
                    <label class="form-label">URL Base da API</label>
                    <div style="display: flex; gap: 10px; align-items: center;">
                        <input type="text" class="form-input" value="https://api.superacao.org.br/v1" readonly style="flex: 1;">
                        <button class="btn btn-outline btn-sm">Copiar</button>
                    </div>
                </div>
                
                <div class="form-row">
                    <label class="form-label">Chaves de API</label>
                    ${Components.dataTable(
                        ['Chave', 'Descri√ß√£o', 'Validade', 'Limite', 'Status', 'A√ß√µes'],
                        apiKeys,
                        apiKeyActions
                    )}
                    <button class="btn btn-primary" style="margin-top: 15px;">+ Nova Chave de API</button>
                </div>
            </div>
        `;
    },
    
    // Renderiza a tab de Webhooks
    renderWebhooks: function() {
        // Lista de webhooks
        const webhooks = [
            ['Matr√≠culas', 'https://parceiro.com.br/webhook/matriculas', 'Cria√ß√£o, Atualiza√ß√£o', Components.statusBadge('Ativo', 'active')],
            ['Pagamentos', 'https://parceiro.com.br/webhook/pagamentos', 'Confirma√ß√£o', Components.statusBadge('Ativo', 'active')],
            ['Usu√°rios', 'https://parceiro.com.br/webhook/usuarios', 'Cria√ß√£o', Components.statusBadge('Inativo', 'inactive')]
        ];
        
        const webhookActions = [
            { title: 'Editar', icon: '‚úèÔ∏è' },
            { title: 'Testar', icon: 'üîÑ' },
            { title: 'Excluir', icon: '‚ùå', danger: true }
        ];
        
        return `
            <div class="form-row">
                <div style="margin-bottom: 15px;">
                    <h3>Configura√ß√µes de Webhooks</h3>
                    <div class="form-help">Configure webhooks para notificar sistemas externos sobre eventos no SuperA√ß√£o.</div>
                </div>
                
                <div class="form-row">
                    ${Components.alert('info', 'Webhooks permitem que sistemas externos sejam notificados em tempo real quando eventos ocorrem no SuperA√ß√£o, como novas matr√≠culas, atualiza√ß√µes de cadastro, etc.', '‚ÑπÔ∏è')}
                </div>
                
                <div class="form-row">
                    <label class="form-label">Webhooks Configurados</label>
                    ${Components.dataTable(
                        ['Descri√ß√£o', 'URL', 'Eventos', 'Status', 'A√ß√µes'],
                        webhooks,
                        webhookActions
                    )}
                    <button class="btn btn-primary" style="margin-top: 15px;">+ Novo Webhook</button>
                </div>
            </div>
        `;
    },
    
    // Renderiza a tab de integra√ß√µes externas
    renderExternalIntegrations: function() {
        // Lista de integra√ß√µes
        const integrations = [
            ['Google Workspace', Components.statusBadge('Conectado', 'active'), '25/08/2024'],
            ['Microsoft 365', Components.statusBadge('Desconectado', 'inactive'), '--'],
            ['Mercado Pago', Components.statusBadge('Conectado', 'active'), '10/05/2024'],
            ['Correios', Components.statusBadge('Conectado', 'active'), '17/07/2024']
        ];
        
        const integrationActions = [
            { title: 'Configurar', icon: '‚öôÔ∏è' },
            { title: 'Reconectar', icon: 'üîÑ' }
        ];
        
        return `
            <div class="form-row">
                <div style="margin-bottom: 15px;">
                    <h3>Integra√ß√µes Externas</h3>
                    <div class="form-help">Conecte o SuperA√ß√£o com servi√ßos e sistemas externos.</div>
                </div>
                
                <div class="form-row">
                    <label class="form-label">Integra√ß√µes Dispon√≠veis</label>
                    ${Components.dataTable(
                        ['Servi√ßo', 'Status', 'Conectado em', 'A√ß√µes'],
                        integrations,
                        integrationActions
                    )}
                </div>
                
                <div class="form-row">
                    <label class="form-label">Adicionar Nova Integra√ß√£o</label>
                    <div style="margin-top: 10px;">
                        <select class="form-select" style="margin-bottom: 10px;">
                            <option value="">Selecione um servi√ßo...</option>
                            <option value="microsoft">Microsoft 365</option>
                            <option value="dropbox">Dropbox</option>
                            <option value="mailchimp">Mailchimp</option>
                            <option value="zapier">Zapier</option>
                            <option value="ifood">iFood</option>
                        </select>
                        <button class="btn btn-primary">Conectar</button>
                    </div>
                </div>
            </div>
        `;
    },
    
    // Renderiza o m√≥dulo completo
    render: function() {
        const tabsContent = [
            { id: 'api', label: 'API', content: this.renderAPI(), active: true },
            { id: 'webhooks', label: 'Webhooks', content: this.renderWebhooks(), active: false },
            { id: 'external', label: 'Integra√ß√µes Externas', content: this.renderExternalIntegrations(), active: false }
        ];
        
        const tabsComponent = Components.tabs(tabsContent);
        
        return `
            <div class="settings-section" id="integracao">
                <h2 class="settings-title">Integra√ß√µes</h2>
                ${tabsComponent.tabs}
                ${tabsComponent.content}
            </div>
        `;
    }
};

// M√≥dulo para Usu√°rios e Permiss√µes
const UsuariosModule = {
    // Renderiza a tab de lista de usu√°rios
    renderUsersList: function() {
        const users = [
            ['Carlos Oliveira', 'carlos@superacao.org.br', 'Administrador', Components.statusBadge('Ativo', 'active'), '28/09/2024 10:32'],
            ['Ricardo Santos', 'ricardo@superacao.org.br', 'Coordenador', Components.statusBadge('Ativo', 'active'), '28/09/2024 16:20'],
            ['Patr√≠cia Gomes', 'patricia@superacao.org.br', 'Professor', Components.statusBadge('Ativo', 'active'), '28/09/2024 15:45'],
            ['Fernando Souza', 'fernando@superacao.org.br', 'Secret√°ria', Components.statusBadge('Ativo', 'active'), '28/09/2024 14:10'],
            ['Mariana Lima', 'mariana@superacao.org.br', 'Financeiro', Components.statusBadge('Inativo', 'inactive'), '15/09/2024 09:25']
        ];
        
        const userActions = [
            { title: 'Editar', icon: '‚úèÔ∏è' },
            { title: 'Permiss√µes', icon: 'üîê' },
            { title: 'Excluir', icon: '‚ùå', danger: true }
        ];
        
        return `
            <div class="form-row">
                <div style="margin-bottom: 15px;">
                    <h3>Usu√°rios do Sistema</h3>
                    <div class="form-help">Gerencie usu√°rios e seus acessos ao sistema.</div>
                </div>
                
                <div class="form-row">
                    <div style="display: flex; gap: 10px; justify-content: flex-end; margin-bottom: 15px;">
                        <button class="btn btn-primary">+ Novo Usu√°rio</button>
                        <button class="btn btn-outline">Importar Usu√°rios</button>
                    </div>
                </div>
                
                <div class="form-row">
                    ${Components.dataTable(
                        ['Nome', 'E-mail', 'Perfil', 'Status', '√öltimo Acesso', 'A√ß√µes'],
                        users,
                        userActions
                    )}
                </div>
            </div>
        `;
    },
    
    // Renderiza a tab de perfis e permiss√µes
    renderPermissions: function() {
        const profiles = [
            ['Administrador', '5 usu√°rios', 'Acesso total ao sistema'],
            ['Coordenador', '12 usu√°rios', 'Acesso a matr√≠culas, alunos, turmas e relat√≥rios'],
            ['Professor', '28 usu√°rios', 'Acesso a turmas, frequ√™ncia e notas'],
            ['Secret√°ria', '8 usu√°rios', 'Acesso a matr√≠culas e alunos'],
            ['Financeiro', '3 usu√°rios', 'Acesso a pagamentos e relat√≥rios financeiros']
        ];
        
        const profileActions = [
            { title: 'Editar', icon: '‚úèÔ∏è' },
            { title: 'Duplicar', icon: 'üîÑ' },
            { title: 'Excluir', icon: '‚ùå', danger: true }
        ];
        
        return `
            <div class="form-row">
                <div style="margin-bottom: 15px;">
                    <h3>Perfis e Permiss√µes</h3>
                    <div class="form-help">Configure perfis de acesso e permiss√µes para usu√°rios do sistema.</div>
                </div>
                
                <div class="form-row">
                    <label class="form-label">Perfis de Acesso</label>
                    ${Components.dataTable(
                        ['Nome do Perfil', 'Quantidade de Usu√°rios', 'Descri√ß√£o', 'A√ß√µes'],
                        profiles,
                        profileActions
                    )}
                    <button class="btn btn-primary" style="margin-top: 15px;">+ Novo Perfil</button>
                </div>
                
                <div class="form-row">
                    <label class="form-label">Pol√≠tica de Senhas</label>
                    <div style="margin-top: 10px;">
                        ${Components.toggleSwitch('Exigir senhas fortes', true)}
                        ${Components.toggleSwitch('Expira√ß√£o de senha a cada 90 dias', true)}
                        ${Components.toggleSwitch('Bloquear ap√≥s 5 tentativas inv√°lidas', true)}
                    </div>
                </div>
            </div>
        `;
    },
    
    // Renderiza a tab de autentica√ß√£o
    renderAuthentication: function() {
        return `
            <div class="form-row">
                <div style="margin-bottom: 15px;">
                    <h3>Configura√ß√µes de Autentica√ß√£o</h3>
                    <div class="form-help">Configure m√©todos de autentica√ß√£o e seguran√ßa para acesso ao sistema.</div>
                </div>
                
                <div class="form-row">
                    <label class="form-label">M√©todos de Autentica√ß√£o</label>
                    <div style="margin-top: 10px;">
                        ${Components.toggleSwitch('Login com e-mail e senha', true)}
                        ${Components.toggleSwitch('Autentica√ß√£o de dois fatores (2FA)', true)}
                        ${Components.toggleSwitch('Autentica√ß√£o com Google', false)}
                        ${Components.toggleSwitch('Autentica√ß√£o com Microsoft', false)}
                    </div>
                </div>
                
                <div class="form-row">
                    <label class="form-label">Configura√ß√µes de Sess√£o</label>
                    <div style="margin-top: 10px;">
                        <div class="form-grid">
                            <div>
                                <div class="form-help">Tempo m√°ximo de inatividade</div>
                                <select class="form-select">
                                    <option>15 minutos</option>
                                    <option selected>30 minutos</option>
                                    <option>1 hora</option>
                                    <option>2 horas</option>
                                    <option>4 horas</option>
                                </select>
                            </div>
                            <div>
                                <div class="form-help">Dura√ß√£o m√°xima da sess√£o</div>
                                <select class="form-select">
                                    <option>4 horas</option>
                                    <option selected>8 horas</option>
                                    <option>24 horas</option>
                                    <option>7 dias</option>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="form-row">
                    <label class="form-label">Configura√ß√µes de Seguran√ßa</label>
                    <div style="margin-top: 10px;">
                        ${Components.toggleSwitch('Bloquear m√∫ltiplas sess√µes simult√¢neas', false)}
                        ${Components.toggleSwitch('Registrar hist√≥rico de login', true)}
                        ${Components.toggleSwitch('Enviar notifica√ß√£o de novo login', true)}
                    </div>
                </div>
            </div>
        `;
    },
    
    // Renderiza o m√≥dulo completo
    render: function() {
        const tabsContent = [
            { id: 'usuarios-lista', label: 'Lista de Usu√°rios', content: this.renderUsersList(), active: true },
            { id: 'perfis', label: 'Perfis e Permiss√µes', content: this.renderPermissions(), active: false },
            { id: 'autenticacao', label: 'Autentica√ß√£o', content: this.renderAuthentication(), active: false }
        ];
        
        const tabsComponent = Components.tabs(tabsContent);
        
        return `
            <div class="settings-section" id="usuarios">
                <h2 class="settings-title">Usu√°rios e Permiss√µes</h2>
                ${tabsComponent.tabs}
                ${tabsComponent.content}
            </div>
        `;
    }
};

// M√≥dulo para Apar√™ncia
const AparenciaModule = {
    // Renderiza a tab de tema
    renderTheme: function() {
        return `
            <div class="form-row">
                <div style="margin-bottom: 15px;">
                    <h3>Configura√ß√µes de Tema</h3>
                    <div class="form-help">Personalize as cores e o visual do sistema.</div>
                </div>
                
                <div class="form-row">
                    <label class="form-label">Cor Prim√°ria</label>
                    <div style="display: flex; gap: 10px; align-items: center;">
                        <input type="color" value="#1a5276" style="width: 50px; height: 40px;">
                        <input type="text" class="form-input" value="#1a5276" style="width: 120px;">
                    </div>
                </div>
                
                <div class="form-row">
                    <label class="form-label">Cor Secund√°ria</label>
                    <div style="display: flex; gap: 10px; align-items: center;">
                        <input type="color" value="#f39c12" style="width: 50px; height: 40px;">
                        <input type="text" class="form-input" value="#f39c12" style="width: 120px;">
                    </div>
                </div>
                
                <div class="form-row">
                    <label class="form-label">Cor de Destaque</label>
                    <div style="display: flex; gap: 10px; align-items: center;">
                        <input type="color" value="#2ecc71" style="width: 50px; height: 40px;">
                        <input type="text" class="form-input" value="#2ecc71" style="width: 120px;">
                    </div>
                </div>
                
                <div class="form-row">
                    <label class="form-label">Tema do Sistema</label>
                    <div style="display: flex; gap: 20px; margin-top: 15px;">
                        <div style="text-align: center;">
                            <div style="width: 120px; height: 80px; background-color: white; border: 1px solid #ddd; border-radius: 4px; margin-bottom: 10px;"></div>
                            <div class="checkbox-group">
                                <input type="radio" name="theme" id="theme-light" checked>
                                <label for="theme-light">Claro</label>
                            </div>
                        </div>
                        <div style="text-align: center;">
                            <div style="width: 120px; height: 80px; background-color: #2c3e50; border: 1px solid #ddd; border-radius: 4px; margin-bottom: 10px;"></div>
                            <div class="checkbox-group">
                                <input type="radio" name="theme" id="theme-dark">
                                <label for="theme-dark">Escuro</label>
                            </div>
                        </div>
                        <div style="text-align: center;">
                            <div style="width: 120px; height: 80px; background: linear-gradient(to right, white 50%, #2c3e50 50%); border: 1px solid #ddd; border-radius: 4px; margin-bottom: 10px;"></div>
                            <div class="checkbox-group">
                                <input type="radio" name="theme" id="theme-auto">
                                <label for="theme-auto">Autom√°tico</label>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="form-row">
                    <label class="form-label">Estilos Adicionais</label>
                    <div style="margin-top: 10px;">
                        ${Components.toggleSwitch('Cantos arredondados', true)}
                        ${Components.toggleSwitch('Sombras nos elementos', true)}
                        ${Components.toggleSwitch('Efeitos de transi√ß√£o', true)}
                    </div>
                </div>
                
                <div class="form-row">
                    <button class="btn btn-primary">Aplicar Tema</button>
                    <button class="btn btn-outline" style="margin-left: 10px;">Restaurar Padr√£o</button>
                </div>
            </div>
        `;
    },
    
    // Renderiza a tab de marca
    renderBranding: function() {
        return `
            <div class="form-row">
                <div style="margin-bottom: 15px;">
                    <h3>Personaliza√ß√£o de Marca</h3>
                    <div class="form-help">Configure os elementos de marca e identidade visual do sistema.</div>
                </div>
                
                <div class="form-row">
                    <label class="form-label">Logo do Sistema</label>
                    <div style="display: flex; gap: 20px; align-items: start; margin-top: 15px;">
                        <div style="text-align: center;">
                            <img src="/api/placeholder/100/100" alt="Logo" style="width: 100px; height: 100px; object-fit: cover; border-radius: 4px; border: 1px solid #ddd;">
                            <div style="margin-top: 10px;">
                                <button class="btn btn-outline btn-sm">Trocar Logo</button>
                            </div>
                        </div>
                        <div>
                            <div class="form-help" style="margin-bottom: 5px;">Recomenda√ß√µes:</div>
                            <ul style="margin: 0; padding-left: 20px; font-size: 14px; color: var(--gray);">
                                <li>Dimens√µes recomendadas: 200x200 pixels</li>
                                <li>Formatos aceitos: PNG, JPG, SVG</li>
                                <li>Tamanho m√°ximo: 2MB</li>
                                <li>Prefer√≠vel com fundo transparente</li>
                            </ul>
                        </div>
                    </div>
                </div>
                
                <div class="form-row">
                    <label class="form-label">Favicon</label>
                    <div style="display: flex; gap: 20px; align-items: start; margin-top: 15px;">
                        <div style="text-align: center;">
                            <img src="/api/placeholder/32/32" alt="Favicon" style="width: 32px; height: 32px; object-fit: cover; border-radius: 4px; border: 1px solid #ddd;">
                            <div style="margin-top: 10px;">
                                <button class="btn btn-outline btn-sm">Trocar Favicon</button>
                            </div>
                        </div>
                        <div>
                            <div class="form-help" style="margin-bottom: 5px;">Recomenda√ß√µes:</div>
                            <ul style="margin: 0; padding-left: 20px; font-size: 14px; color: var(--gray);">
                                <li>Dimens√µes: 32x32 pixels</li>
                                <li>Formato: ICO, PNG</li>
                                <li>Tamanho m√°ximo: 100KB</li>
                            </ul>
                        </div>
                    </div>
                </div>
                
                <div class="form-row">
                    <label class="form-label">Nome do Sistema</label>
                    <input type="text" class="form-input" value="SuperA√ß√£o">
                </div>
                
                <div class="form-row">
                    <label class="form-label">Slogan</label>
                    <input type="text" class="form-input" value="Transformando vidas atrav√©s da educa√ß√£o">
                </div>
                
                <div class="form-row">
                    <button class="btn btn-primary">Salvar Altera√ß√µes</button>
                </div>
            </div>
        `;
    },
    
    // Renderiza a tab de layout
    renderLayout: function() {
        return `
            <div class="form-row">
                <div style="margin-bottom: 15px;">
                    <h3>Configura√ß√µes de Layout</h3>
                    <div class="form-help">Personalize o layout e a disposi√ß√£o dos elementos na interface.</div>
                </div>
                
                <div class="form-row">
                    <label class="form-label">Layout do Menu</label>
                    <div style="display: flex; gap: 20px; margin-top: 15px;">
                        <div style="text-align: center;">
                            <div style="width: 120px; height: 80px; background-color: white; border: 1px solid #ddd; border-radius: 4px; margin-bottom: 10px; display: flex;">
                                <div style="width: 30px; background-color: #eee;"></div>
                                <div style="flex: 1;"></div>
                            </div>
                            <div class="checkbox-group">
                                <input type="radio" name="layout" id="layout-sidebar" checked>
                                <label for="layout-sidebar">Barra Lateral</label>
                            </div>
                        </div>
                        <div style="text-align: center;">
                            <div style="width: 120px; height: 80px; background-color: white; border: 1px solid #ddd; border-radius: 4px; margin-bottom: 10px; display: flex; flex-direction: column;">
                                <div style="height: 30px; background-color: #eee;"></div>
                                <div style="flex: 1;"></div>
                            </div>
                            <div class="checkbox-group">
                                <input type="radio" name="layout" id="layout-top">
                                <label for="layout-top">Menu Superior</label>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="form-row">
                    <label class="form-label">Densidade da Interface</label>
                    <div style="display: flex; gap: 20px; margin-top: 15px;">
                        <div class="checkbox-group">
                            <input type="radio" name="density" id="density-compact">
                            <label for="density-compact">Compacta</label>
                        </div>
                        <div class="checkbox-group">
                            <input type="radio" name="density" id="density-normal" checked>
                            <label for="density-normal">Normal</label>
                        </div>
                        <div class="checkbox-group">
                            <input type="radio" name="density" id="density-comfortable">
                            <label for="density-comfortable">Confort√°vel</label>
                        </div>
                    </div>
                </div>
                
                <div class="form-row">
                    <label class="form-label">Elementos na P√°gina Inicial</label>
                    <div style="margin-top: 10px;">
                        ${Components.toggleSwitch('Mostrar estat√≠sticas r√°pidas', true)}
                        ${Components.toggleSwitch('Mostrar gr√°ficos', true)}
                        ${Components.toggleSwitch('Mostrar calend√°rio', true)}
                        ${Components.toggleSwitch('Mostrar atividades recentes', true)}
                    </div>
                </div>
                
                <div class="form-row">
                    <button class="btn btn-primary">Aplicar Layout</button>
                    <button class="btn btn-outline" style="margin-left: 10px;">Visualizar</button>
                </div>
            </div>
        `;
    },
    
    // Renderiza o m√≥dulo completo
    render: function() {
        const tabsContent = [
            { id: 'tema', label: 'Tema e Cores', content: this.renderTheme(), active: true },
            { id: 'marca', label: 'Logo e Marca', content: this.renderBranding(), active: false },
            { id: 'layout', label: 'Layout', content: this.renderLayout(), active: false }
        ];
        
        const tabsComponent = Components.tabs(tabsContent);
        
        return `
            <div class="settings-section" id="aparencia">
                <h2 class="settings-title">Apar√™ncia</h2>
                ${tabsComponent.tabs}
                ${tabsComponent.content}
            </div>
        `;
    }
};

// Adicione estes m√≥dulos ao App.modules
// Isso deve ser feito no arquivo principal ap√≥s a importa√ß√£o dos m√≥dulos
/*
App.modules.integracao = IntegracaoModule;
App.modules.usuarios = UsuariosModule;
App.modules.aparencia = AparenciaModule;
*/